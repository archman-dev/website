/**
 * CSS files with the .module.css suffix will be treated as CSS modules
 * and scoped locally.
 */
/* Hero background and layout */
.heroBanner {
  padding: 5rem 0;
  text-align: center;
  position: relative;
  overflow: hidden;
  color: var(--ifm-font-color-base);
  background:
    radial-gradient(1200px 500px at 20% 0%, rgba(0, 173, 216, 0.14), transparent 60%),
    radial-gradient(900px 400px at 80% 20%, rgba(255, 212, 59, 0.12), transparent 60%),
    linear-gradient(135deg, rgba(27, 107, 94, 0.18) 0%, rgba(35, 138, 118, 0.12) 100%);
}

@media screen and (max-width: 996px) {
  .heroBanner {
    padding: 2rem;
  }
}

.buttons {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  flex-wrap: wrap; /* allow CTAs to wrap on small screens */
}

/* Make primary CTA stand out on light hero */
.buttons :global(.button--secondary) {
  background-color: var(--ifm-color-primary);
  border-color: var(--ifm-color-primary);
  color: #ffffff;
  white-space: nowrap; /* keep label on one line */
}
.buttons :global(.button--secondary):hover {
  background-color: var(--brand-green-700);
  border-color: var(--brand-green-700);
}

/* Horizontal infinite scroller */
.badgeScroller {
  margin: 0.75rem auto 1.25rem;
  height: 96px; /* two fixed rows */
  overflow: hidden;
  position: relative;
  max-width: 100%;
}
.scrollerInner {
  display: grid;
  grid-template-rows: repeat(2, 1fr);
  gap: 0.5rem 0; /* vertical gap between rows only */
}

.scrollerRow {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 44px; /* approximate row height (badge line-height) */
  overflow: hidden;
  position: relative;
}

.rowTrackInner {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  width: max-content; /* equals sum of two tracks */
  will-change: transform;
  /* width is sum of two tracks, animation translates by 50% of this container */
}

.scrollerTrack {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  gap: 0.5rem;
  white-space: nowrap;
  flex: 0 0 auto; /* donâ€™t shrink tracks; preserve width for seamless loop */
}

/* Non-breaking badge text */
.badge {
  white-space: nowrap;
}

/* Opposite directions */
.rowLeft {
  --marquee-duration: 84s; /* 3x slower */
}
.rowLeft .rowTrackInner {
  animation: marquee-left var(--marquee-duration) linear infinite;
}
.rowRight {
  --marquee-duration: 96s; /* 3x slower, slight variation */
}
.rowRight .rowTrackInner {
  animation: marquee-right var(--marquee-duration) linear infinite;
}

@keyframes marquee-left {
  0% { transform: translateX(0); }
  100% { transform: translateX(-50%); }
}

@keyframes marquee-right {
  0% { transform: translateX(-50%); }
  100% { transform: translateX(0); }
}

/* Accent the outline CTA with Go blue */
.buttons :global(.button--outline) {
  border-color: var(--accent-go);
  color: var(--accent-go);
  white-space: nowrap; /* keep label on one line */
}
.buttons :global(.button--outline):hover {
  background: color-mix(in srgb, var(--accent-go) 12%, transparent);
  border-color: var(--accent-go);
}

.heroTitle {
  letter-spacing: -0.02em;
}

.textGradient {
  background: linear-gradient(90deg, var(--accent-python), var(--accent-go));
  -webkit-background-clip: text;
  background-clip: text;
  color: transparent;
}

.heroSubtitle {
  max-width: 820px;
  margin: 0 auto 0.75rem;
}

/* Dark theme adjusts */
[data-theme='dark'] .heroBanner {
  color: #ffffff;
}

/* Ensure children use the intended color */
.heroBanner .hero__title,
.heroBanner .hero__subtitle {
  color: inherit;
}

.stackBadges {
  display: flex;
  gap: 0.5rem;
  justify-content: center;
  margin: 0.5rem auto 1rem;
  flex-wrap: wrap;
  max-width: 980px;
  max-height: 84px;
  overflow: hidden;
  position: relative;
}

.badge {
  border-radius: 999px;
  padding: 0.25rem 0.6rem;
  font-weight: 600;
  font-size: 0.85rem;
  border: 1px solid rgba(0,0,0,0.06);
  background: transparent;
  -webkit-backdrop-filter: saturate(140%) blur(6px);
  backdrop-filter: saturate(140%) blur(6px);
  box-shadow: 0 0 0 0 rgba(0,0,0,0.0);
  transition: box-shadow 120ms ease, transform 120ms ease;
}
.badge:hover {
  box-shadow: 0 4px 16px rgba(0,0,0,0.08);
  transform: translateY(-1px);
}

.stackBadges::after {
  content: '';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  height: 36px;
  background: linear-gradient(to bottom, rgba(255,255,255,0), rgba(255,255,255,0.92));
}
[data-theme='dark'] .stackBadges::after {
  background: linear-gradient(to bottom, rgba(0,0,0,0), rgba(0,0,0,0.6));
}

@media (max-width: 680px) {
  .stackBadges {
    max-height: 100px;
    gap: 0.4rem;
  }
  .badge {
    font-size: 0.8rem;
    padding: 0.2rem 0.5rem;
  }
}

/* Colorful topic badges by category */
.badgeArch {
  color: #0f2d2a;
  background: color-mix(in srgb, var(--brand-green-300) 30%, white);
  border-color: rgba(27, 107, 94, 0.35);
}
.badgeIntegration {
  color: #152b40;
  background: color-mix(in srgb, var(--accent-go) 26%, white);
  border-color: rgba(0, 173, 216, 0.35);
}
.badgeData {
  color: #3a2a10;
  background: color-mix(in srgb, var(--accent-python) 26%, white);
  border-color: rgba(255, 212, 59, 0.35);
}
.badgePerformance {
  color: #2b1c3a;
  background: color-mix(in srgb, #9b59b6 22%, white);
  border-color: rgba(155, 89, 182, 0.35);
}
.badgeReliability {
  color: #11301e;
  background: color-mix(in srgb, var(--brand-node-500) 24%, white);
  border-color: rgba(104, 160, 99, 0.35);
}
.badgeSecurity {
  color: #2b140e;
  background: color-mix(in srgb, #e67e22 22%, white);
  border-color: rgba(230, 126, 34, 0.35);
}
.badgeCloud {
  color: #0a2740;
  background: color-mix(in srgb, #3498db 26%, white);
  border-color: rgba(52, 152, 219, 0.35);
}

/* Removed vertical scroller in favor of horizontal marquee */

.badgePython {
  color: #5b4b00;
  border-color: rgba(255, 212, 59, 0.45);
  background: color-mix(in srgb, var(--accent-python) 18%, white);
}

.badgeGo {
  color: #003a45;
  border-color: rgba(0, 173, 216, 0.45);
  background: color-mix(in srgb, var(--accent-go) 16%, white);
}

.badgeNode {
  color: #1f3a1d;
  border-color: rgba(104, 160, 99, 0.45); /* fallback based on --accent-node */
  background: color-mix(in srgb, var(--accent-node) 20%, white);
}
